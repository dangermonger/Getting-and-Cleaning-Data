swirl()
library()
install.packages("swirl")
library()
library(swirl)
swirl()
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length()
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
q()
swirl()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lappy(flag_colors, sum)
lappy
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colours, mean)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lappy(flag_shapes, range)
lapply(flag_shapes, range)
shape_mat <- lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(unique(shape_mat)
)
unique_vals <- lapply(unique(shape_mat))
unique_vals <- lapply(flags, unique)
unique_vals
length(unique_vals)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
q()
set.seed(13435) ## makes sample numbers below reproduceable
X <- data.frame("var1"=sample(1:5),"var2"=sample(6:10),"var3"=sample(11:15)) ##3 variables, 5 observations
X <- X[sample(1:5),]; X$var2[c(1,3)] = NA ## rescramble the dataframe, then replace 1st and 3rd characters of var2 with NAs
X
library(plyr)
arrange(X,var1)
arrange(X,desc(var1))
X$var4 <- rnorm(5)
X
class(X)
Y <- cbind(X,rnorm(5))
Y
?table
?table
?table
help
help(plot)
updateR()
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
updateR()
r.Version()
R.versrion()
R.verstion
R.version
?table
ls()
rm(list = ls())
ls()
ls()
class(testact)
setwd("C:/Users/Dangermonger/Documents/GitHub/Getting-and-Cleaning-Data/UCI HAR Dataset")
library(dplyr) ##load dplyr package
trainact = read.table("./train/y_train.txt") ##types of activities - train
testact = read.table("./test/y_test.txt") ##types of activities - test
class(testact)
?make.names
?length
length(testact)
testact
nrows(testact)
nrow(testact)
trainact = read.table("./train/y_train.txt") ##types of activities - train
testact = read.table("./test/y_test.txt") ##types of activities - test
trainvol = read.table("./train/subject_train.txt") ##volunteers - train
testvol = read.table("./test/subject_test.txt") ##volunteers - test
traindata = read.table("./train/X_train.txt") ##data - train
testdata = read.table("./test/X_test.txt") ##data - test
appendact <- rbind(trainact, testact) ##append activity dataframes
appendvol <- rbind(trainvol, testvol) ##append volunteer dataframes
appendata <- rbind(traindata, testdata) ##append data dataframes
features = read.table("./features.txt", colClasses=c("NULL",NA)) ##read only the second column of features
transpdata = t(features) ##transpose features into a character list
datacols <- make.names(transpdata, unique = TRUE, allow_ = TRUE) ##coerce list into valid column names
colnames(appendata) <- datacols ##change column names of appendata to  datacols list
colnames(appendvol) <- "Volunteer_ID" ##change column name
colnames(appendact) <- "Activity" ##change column name
actid = mutate(appendact, id=nrow(appendact)) #
head(actid)
actid = mutate(appendact, id=1:nrow(appendact))
head(actid)
actid = mutate(appendact, id=1:nrow(appendact)) ##add id column
volid = mutate(appendvol, id=1:nrow(appendvol)) ##add id column
dataid = mutate(appendata, id=1:nrow(appendata)) ##add id column
merge1 = merge(actid, volid,by.x="id",by.y="id",all=TRUE) ##merge activity and volunteer dataframes
merge2 = merge(merge1, dataid,by.x="id",by.y="id",all=TRUE) ##merge dataid and merged dataframes
convertbl <- tbl_df(merge2) ## convert table to tbl
rm("merge2") ## remove other handle
meanstdtbl <- select(convertbl, Volunteer_ID, Activity, contains(".mean."), contains("std")) ##extract only mean and standard deviation, not meanFreq etc..
activities = read.table("./activity_labels.txt") ##read activities dataframe
meanstdtbl[["Activity"]] <- activities[ match(meanstdtbl[['Activity']], activities[['V1']] ) , 'V2'] ##convert activity ids to labels in dataframe
tidytable <- meanstdtbl %>% group_by(Volunteer_ID, Activity) %>% summarise_each(funs(mean)) ##
head(tidytable)
head(merge2)
merge2 = merge(merge1, dataid,by.x="id",by.y="id",all=TRUE) ##m
head(merge2)
str(merge2)
class(merge2)
head(activities)
?match
meanstdtbl %>% group_by(Volunteer_ID, Activity)
meanstdtbl <- select(convertbl, Volunteer_ID, Activity, contains(".mean."), contains("std")) ##
meanstdtbl
meanstdtbl[["Activity"]] <- activities[ match(meanstdtbl[['Activity']], activities[['V1']] ) , 'V2'] ##c
meanstdtbl
?group_by
meanstdtbl  %>% summarise_each(funs(mean))
?summmarise_each
/.summarise_each
?summarise_each
?funs
write.table
?write.table
