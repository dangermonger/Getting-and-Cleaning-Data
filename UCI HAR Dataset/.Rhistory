class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head()
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot( y = cars$speed, x = cars$dist)
plot(y = cars$speed, x = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
xlim = c(10, 15)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
mtcars
data(mtcars)
?boxplot
boxplot(data = mtcars, mpg ~ cyl)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
q()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
day(this_dat)
day(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
second(this_moment)
mydate <- ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
mdy(25081985)
dmy(25081985)
ymd("192012")
ymd("1920//1//2")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- Update(this_moment)
?update
this_moment <- update(this_moment)
this_moment <- update(this_moment, hours = 11, minutes = 16, seconds = 32)
this_moment
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
con = url("http://www.seek.com.au/JobSearch?DateRange=7&SearchFrom=quickupper&SearchType=search+again&Keywords=+Driver+hc+or+Driver+mc&state=3107")
htmlCode = readLines(con)
close(con)
htmlCode
head(htmlCode)
library(XML)
url <- "http://www.seek.com.au/JobSearch?DateRange=7&SearchFrom=quickupper&SearchType=search+again&Keywords=+Driver+hc+or+Driver+mc&state=3107"
html <- htmlTreeParse(url, useInternalNodes=T)
xpathSApply(html, "//title", xmlValue)
head(htmlCode)
htmlCode
xpathSApply(html, "//h2", xmlValue)
xpathSApply(html, "//dd", xmlValue)
xpathSApply(html, "//job-title", xmlValue)
str(xpathSApply(html, "//job-title", xmlValue))
xpathSApply(html, "//a class="job-title", xmlValue)
xpathSApply(html, "//dd", xmlValue)
xpathSApply(html, "//a", xmlValue)
xpathSApply(html, "//article data-bind="attr: {'data-job-id': id}" class="experimental-fade experimental-fade-completed" data-job-id="28306370"", xmlValue)
xpathSApply(html, "//article", xmlValue)
xpathSApply(html, "//article data bind", xmlValue)
xpathSApply(html, "//article data-bind", xmlValue)
xpathSApply(html, "//article", xmlValue)
xpathSApply(html, "//dl", xmlValue)
xpathSApply(html, "//a", xmlValue)
xpathSApply(html, "///a", xmlValue)
xpathSApply(html, "////a", xmlValue)
xpathSApply(html, "/////a", xmlValue)
xpathSApply(html, "//a", xmlValue)
xpathSApply(html, "/a", xmlValue)
xpathSApply(html, "//a", xmlValue)
?oauth
?mutate
?merge
setwd("C:/Users/KOLeary/Documents/Rail Workers")
setwd("C:/Users/KOLeary/Documents/")
dir()
dir()
readfile <- read.csv("Rail Workers.csv", colClasses = "character")
readfile
str(readfile)
readfile <- read.csv("Rail Workers.csv", colClasses = "character")
str(readfile)
readfile
readfile <- read.csv("Rail Workers.csv", colClasses = "character")
str(readfile)
?split
setwd("C:/Users/KOLeary/Documents/GitHub/Getting-and-Cleaning-Data/UCI HAR Dataset/train")
library(plyr)
library(dplyr)
xtrain = read.table("X_train.txt") ##read training dataframe
str(xtrain)
setwd("C:/Users/KOLeary/Documents/GitHub/Getting-and-Cleaning-Data/UCI HAR Dataset")
setwd("C:/Users/KOLeary/Documents/GitHub/Getting and Cleaning Data")
setwd("C:/Users/KOLeary/Documents/GitHub/Getting and Cleaning Data/UCI HAR Dataset")
library(plyr)
library(dplyr)
xtrain = read.table("X_train.txt") ##read training dataframe
str(xtrain)
xtrain = read.table("X_train.txt") ##read training dataframe
setwd("C:/Users/KOLeary/Documents/GitHub/Getting and Cleaning Data/UCI HAR Dataset/train")
xtrain = read.table("X_train.txt") ##read training dataframe
str(xtrain)
xtrain
bob <- data.frame(bob = 1,2,3,4,5)
bob
bob <- data.frame(bob = c(1,2,3,4,5))
bob
tom <- data.frame(bob = c(1,2,3,4,5))
bob <- data.frame(bob = c(1,2,3,4,5), id = 1:5)
tom <- data.frame(bob = c(1,2,3,4,5), id = 1:5)
merge1 <- (bob, tom, by.x = "id", by.y ="id", all = TRUE)
bob <- data.frame(bob = c(1,2,3,4,5), id = 1:5)
tom <- data.frame(bob = c(1,2,3,4,5), id = 1:5)
tom
tom <- data.frame(tom = c(1,2,3,4,5), id = 1:5)
tom
merge1 <- merge(bob, tom, by.x = "id", by.y ="id", all = TRUE)
merge1
tom <- data.frame(tom = c(1,2,3,4,5), id = 5:9)
merge1 <- merge(bob, tom, by.x = "id", by.y ="id", all = TRUE)
merge1
tom <- data.frame(tom = c(5,6,7,8,9), id = 1:5)
merge1 <- merge(bob, tom, by.x = "id", by.y ="id", all = TRUE)
merge1
?append
append1 <- append(bob, tom)
append1
bob <- data.frame(bob = c(1,2,3,4,5)
tom <- data.frame(tom = c(5,6,7,8,9)
bob <- data.frame(bob = c(1,2,3,4,5))
tom <- data.frame(tom = c(5,6,7,8,9))
append1 <- append(bob, tom)
append1
str(xtrain)
bob <- data.frame(1,2,3,4,5)
tom <- data.frame(5,6,7,8,9)
append1 <- append(bob, tom)
append1
class(append1)
bob
bob <- data.frame(c(1,2,3,4,5))
bob
bob <- data.frame(X1 = c(1,2,3,4,5))
bob
voluncol
voluncol = read.table("subject_train.txt") ##read
voluncol
head(voluncol)
head(xtrain)
bob <- data.frame(V1 = c(1,2,3,4,5))
tom <- data.frame(V1 = c(5,6,7,8,9))
append1 <- append(bob, tom)
append1
class(append1)
append(1:5, 0:1, after = 3)
append1 <- append(bob, tom, after = bob)
append1 <- append(bob, tom, after = 5)
append1
bob
tom
?rbind
rbindtest <- rbind(bob, tom)
rbindtest
files <- dir("C:/Users/KOLeary/Documents/GitHub/Getting and Cleaning Data/UCI HAR Dataset/train", recursive=TRUE, full.names=TRUE, pattern="\\.txt$")
files
?file
file <- file("C:/Users/KOLeary/Documents/GitHub/Getting and Cleaning Data/UCI HAR Dataset/train/y_train.txt")
xtrain(read.table(file)
)
xtrain = read.table(file)
xtrain
typeact <- file("C:/Users/KOLeary/Documents/GitHub/Getting and Cleaning Data/UCI HAR Dataset/train/y_train.txt")
typeact = read.table(file)
typeact
typeactfile <- file("C:/Users/KOLeary/Documents/GitHub/Getting and Cleaning Data/UCI HAR Dataset/test/y_test.txt")
typeacttrain <- file("C:/Users/KOLeary/Documents/GitHub/Getting and Cleaning Data/UCI HAR Dataset/train/y_train.txt")
typeact = read.table(typeacttrain)
typeacttest <- file("C:/Users/KOLeary/Documents/GitHub/Getting and Cleaning Data/UCI HAR Dataset/test/y_test.txt")
testact = read.table(typeacttest)
testact
setwd("C:/Users/KOLeary/Documents/GitHub/Getting and Cleaning Data/UCI HAR Dataset")
filetrainact <- file("./train/y_train.txt")
trainact = read.table(filetrainact)
trainact
filetrainact <- file("./train/y_train.txt") ##types of activities
trainact = read.table(filetrainact)
filetestact <- file("./test/y_test.txt") ##types of activities
testact = read.table(filetestact)
filetrainvol <- file("./train/subject_train.txt") ##volunteers
trainvol = read.table(filetrainvol)
filetestvol <- file("./test/subject_test.txt") ##volunteers
testvol = read.table(filetestvol)
filetraindata <- file("./train/X_train.txt") ##data
traindata = read.table(filetraindata)
filetestdata <- file("./test/X_test.txt") ##data
testdata = read.table(filetestdata)
testdata
appendact <- rbind(trainact, testact)
appendact
appendvol <- rbind(trainvol, testvol)
appendvol
bob <- data.frame(V1 = c(1,2,3,4,5), V2 = c(5, 4,3,2,1))
bob
tom <- data.frame(V1 = c(5,6,7,8,9), V2 = c(9,8,7,6,5))
tom
rbindtest <- rbind(bob, tom)
rbindtest
appendata <- rbind(traindata, testdata)
str(appendata)
actid = mutate(appendact, id=1:10299)
actid
str(actid)
volid = mutate(appendvol, id=1:10299)
merge1 = merge(actid, volid,by.x="id",by.y="id",all=TRUE)
str(merge1)
dataid = mutate(appendata, id=1:10299)
str(dataid)
merge2 = merge(merge1, dataid,by.x="id",by.y="id",all=TRUE)
str(merge1)
str(merge2)
test = read.table("./train/y_train.txt")
test
test = read.table("./test/y_train.txt")
test = read.table("./test/y_test.txt")
test
trainact = read.table("./train/y_train.txt") ##t
trainact
trainact = read.table("./train/y_train.txt") ##types of activities - train
testact = read.table("./test/y_test.txt") ##types of activities - test
trainvol = read.table("./train/subject_train.txt") ##volunteers - train
testvol = read.table("./test/subject_test.txt") ##volunteers - test
traindata = read.table("./train/X_train.txt") ##data - train
testdata = read.table("./test/X_test.txt") ##data - test
appendact <- rbind(trainact, testact) ##appended activity dataframe
appendvol <- rbind(trainvol, testvol) ##appended volunteer dataframe
appendata <- rbind(traindata, testdata) ##appended data dataframes
actid = mutate(appendact, id=1:10299) ##add id column
volid = mutate(appendvol, id=1:10299) ##add id column
dataid = mutate(appendata, id=1:10299) ##add id column
merge1 = merge(actid, volid,by.x="id",by.y="id",all=TRUE) ##merge activity and volunteer dataframes
merge2 = merge(merge1, dataid,by.x="id",by.y="id",all=TRUE) ##
merge2
str(merge2)
datacols = read.table("./features.txt")
datacols
rbindtest
colnames(rbindtest) <- c("first", "second")
rbindtest
headernames <- c("first", "second")
str(headernames)
rbindtest <- rbind(bob, tom) ##a
rbindtest
colnames(rbindtest) <- headernames
rbindtest
datacols = read.table("./features.txt")
class(datacols)
class(headernames)
headernames = c("first", "second")
class(headernames)
s = c("aa", "bb", "cc", "dd", "ee")
class(s)
str(s)
x = list(n, s, b, 3)
str(x)
headernames[2]
headernames = data.frame("first", "second")
headernames
headernames = data.frame(X1 = c("first", "second")
)
headernames
colnames(rbindtest) <- headernames
rbindtest
?t
class(datacols)
str(datacols)
datacols = read.table("./features.txt", colClasses=c("NULL",NA))
str(datacols)
t(datacols)
datalist <- split(datacols , rownames(datacols))
str(datalist)
datacols = read.table("./features.txt", colClasses=c("NULL",NA))
str(datacols)
?unlist
datacols = read.table("./features.txt", colClasses=c("NULL",NA)) #
unlist(datacols)
datalist <- unlist(datacols)
str(datalist)
datalist <- unlist(datacols, use.names = FALSE))
datalist <- unlist(datacols, use.names = FALSE)
str(datalist)
class(datalist)
str(datalist)
datalist <- unlist(datacols) ##tu
class(datalist)
str(datalist)
datalist <- unlist(datacols, use.names = FALSE)
str(datalist)
?list
datafactor <- unlist(datacols, use.names = FALSE) ##t
datalist <- list(datafactor)
str(datalist)
str(datacols)
tom
colnames(rbindtest) <- headernames
rbindtest
headernames = data.frame(X1 = c("first", "second"))
headernames = c("first", "second")
class(headernames)
datacols = read.table("./features.txt")
datacols <- datacols[, 2]
class(datacols)
datacols
features = read.table("./features.txt")
datacols <- features[, 2]
class(datacols)
str(datacols)
datacols = t(features)
features = read.table("./features.txt", colClasses=c("NULL",NA)) ##reads only the second column of features
datacols = t(features)
datacols = t(features)
datacols
str(datacols)
colappend <- rbind(datacols, testdata)
warnings()
class(datacols)
class(features)
?t
class(features)
str(features)
datacols = t(features)
str(datacols)
datacols = t(features)
str(datacols)
testdata = read.table("./test/X_test.txt")
colnames(testdata) <- datacols #
testdata
head(testdata)
str(testdata)
appendata <- rbind(traindata, testdata) ##appended data dataframes
ls()
str(appendata)
colnames(appendata) <- datacols
str(appendata)
colnames(appendvol)
colnames(appendvol) <- "Volunteer ID"
colnames(appendvol)
colnames(appendact) <- "Activity ID"
actid = mutate(appendact, id=1:10299) ##add id column
volid = mutate(appendvol, id=1:10299) ##add id column
dataid = mutate(appendata, id=1:10299) ##add id column
head(actid)
head(volid)
head(dataid)
dataid = mutate(appendata, id=1:10299) ##ad
features = read.table("./features.txt", colClasses=c("NULL",NA)) ##reads only the second column of features
datacols = t(features) ##transpose features into a character list
colnames(appendata) <- datacols ## chan
dataid = mutate(appendata, id=1:10299) ##add
colnames(appendata)
str(traindata)
dataid = mutate(appendata, id=1:10299) ##add id column
colnames(appendata)
colnames(volid)
dataid = mutate(appendata, id=1:10299) ##
rm(list = ls())
setwd("C:/Users/KOLeary/Documents/GitHub/Getting and Cleaning Data/UCI HAR Dataset")
library(plyr)
library(dplyr)
trainact = read.table("./train/y_train.txt") ##types of activities - train
testact = read.table("./test/y_test.txt") ##types of activities - test
trainvol = read.table("./train/subject_train.txt") ##volunteers - train
testvol = read.table("./test/subject_test.txt") ##volunteers - test
traindata = read.table("./train/X_train.txt") ##data - train
testdata = read.table("./test/X_test.txt") ##data - test
appendact <- rbind(trainact, testact) ##appended activity dataframes
appendvol <- rbind(trainvol, testvol) ##appended volunteer dataframes
appendata <- rbind(traindata, testdata) ##appended data dataframes
features = read.table("./features.txt", colClasses=c("NULL",NA)) ##reads only the second column of features
datacols = t(features) ##transpo
colnames(appendata) <- datacols ## changes colnames of appendata to  datacols list
colnames(appendvol) <- "Volunteer ID"
colnames(appendact) <- "Activity ID"
actid = mutate(appendact, id=1:10299) ##add id column
volid = mutate(appendvol, id=1:10299) ##add id column
dataid = mutate(appendata, id=1:10299) ##add id column
colnames(volid)
colnames(appendata)
dataid = mutate(appendata, id=1:10299)
?make.names
make.names(datacols, unique = FALSE, allow_ = TRUE)
colnames(appendata) <- datacols ## change
dataid = mutate(appendata, id=1:10299) ##add i
features = read.table("./features.txt", colClasses=c("NULL",NA)) ##reads only the second column of features
datacols = t(features) ##transpose features into a character list
make.names(datacols, unique = FALSE, allow_ = TRUE)
features = read.table("./features.txt", colClasses=c("NULL",NA)) ##reads only the second column of features
transpdata = t(features) ##transpose features into a character list
datacols <- make.names(datacols, unique = FALSE, allow_ = TRUE)
colnames(appendata) <- datacols ## chan
dataid = mutate(appendata, id=1:10299) ##
str(transpdata)
head(transpdata)
str(transpdata)
features = read.table("./features.txt", colClasses=c("NULL",NA)) ##rea
transpdata = t(features) ##tra
str(transpdata)
head(transpdata)
colnames(appendata) <- datacols ##
dataid = mutate(appendata, id=1:10299) ##add
datacols <- make.names(datacols, unique = TRUE, allow_ = TRUE)
colnames(appendata) <- datacols ## c
dataid = mutate(appendata, id=1:10299) ##add
head(dataid)
str(dataid)
merge1 = merge(actid, volid,by.x="id",by.y="id",all=TRUE) ##me
merge2 = merge(merge1, dataid,by.x="id",by.y="id",all=TRUE) ##m
head(merge2)
?grepl
merge2[,1]
merge2[1,]
merge2[grepl( "mean"),]
merge2[grepl( "mean", colnames(merge2)),]
merge2[grepl( "mean" | "std", colnames(merge2)),]
select(merge2, grepl( "mean", colnames(merge2)), grepl( "std", colnames(merge2)))
head(merge2)
select(merge2, Activity ID, Volunteer ID)
convertbl <- tbl_df(merge2) ## convert table to tbl
rm("merge2") ## remove other handle
select(convertbl, Activity ID, Volunteer ID)
colnames(merge2)
merge2 = merge(merge1, dataid,by.x="id",by.y="id",all=TRUE) ##m
colnames(merge2)
colnames(convertbl)
select(convertbl, "Activity ID", "Volunteer ID")
library(dplyr)
convertbl <- tbl_df(merge2) ## convert table to tbl
rm("merge2") ## remove other handle
select(convertbl, Activity ID, Volunteer ID)
select(convertbl, Volunteer ID)
select(convertbl, id)
colnames(convertbl)
select(convertbl, Activity ID)
colnames(appendvol) <- "Volunteer_ID" ##change column name
colnames(appendact) <- "Activity_ID" ##ch
actid = mutate(appendact, id=1:10299) ##add id column
volid = mutate(appendvol, id=1:10299) ##add id column
dataid = mutate(appendata, id=1:10299) ##add i
merge1 = merge(actid, volid,by.x="id",by.y="id",all=TRUE) ##merge activity and volunteer dataframes
merge2 = merge(merge1, dataid,by.x="id",by.y="id",all=TRUE) ##m
convertbl <- tbl_df(merge2) ## convert table to tbl
rm("merge2") ## remove other handle
select(convertbl, Activity ID)
convertbl <- tbl_df(merge2) ## convert table to tbl
rm("merge2") ## remove other handle
select(convertbl, Activity_ID)
select(convertbl, Activity_ID, Volunteer_ID)
select(convertbl, grepl( "mean", colnames(merge2)), Volunteer_ID)
select(convertbl, grepl( "mean", colnames(convertbl)), Volunteer_ID)
select(convertbl, contains("mean), Volunteer_ID)
)
select(convertbl, contains("mean"), Volunteer_ID)
select(convertbl, contains("mean"), contains("std"))
select(convertbl, Volunteer_ID, Activity_ID, contains("mean"), contains("std"))
meanstdtbl <- select(convertbl, Volunteer_ID, Activity_ID, contains("mean"), contains("std")) ##
class(meanstdtbl)
rm(list = ls())
ls()
q()
