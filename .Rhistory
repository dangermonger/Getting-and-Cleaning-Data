swirl()
library()
install.packages("swirl")
library()
library(swirl)
swirl()
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length()
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
q()
swirl()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lappy(flag_colors, sum)
lappy
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colours, mean)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lappy(flag_shapes, range)
lapply(flag_shapes, range)
shape_mat <- lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(unique(shape_mat)
)
unique_vals <- lapply(unique(shape_mat))
unique_vals <- lapply(flags, unique)
unique_vals
length(unique_vals)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
q()
oauth_endpoints("github")
myapp <- oauth_app("Coursera Instructor Repos",  "1b507cb194dd89792f4d", "5c983dee0199947cc13ef57171bfb423a1a49b0c")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
setwd("C:/Users/Dangermonger/Documents/GitHub/Getting-and-Cleaning-Data")
library(httr)
##install.packages("jsonlite")
##install.packages("httpuv")
library(jsonlite)
library(httpuv)
remove.packages("Rcpp")
install.packages("Rcpp")
remove.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
remove.packages("httpuv")
install.packages("httpuv")
library(httr)
##install.packages("jsonlite")
##install.packages("httpuv")
library(jsonlite)
library(httpuv)
setwd("C:/Users/Dangermonger/Documents/GitHub/Getting-and-Cleaning-Data")
library(httr)
##install.packages("jsonlite")
##install.packages("httpuv")
library(jsonlite)
library(httpuv)
oauth_endpoints("github")
myapp <- oauth_app("Coursera Instructor Repos",  "1b507cb194dd89792f4d", "5c983dee0199947cc13ef57171bfb423a1a49b0c")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
json1 = content(req)
json2 = jsonlite::fromJSON(toJSON(json1))
library(jsonlite)
json1 = content(req)
json2 = jsonlite::fromJSON(toJSON(json1))
oauth_endpoints("github")
myapp <- oauth_app("Coursera Instructor Repos",  "1b507cb194dd89792f4d", "5c983dee0199947cc13ef57171bfb423a1a49b0c")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
json1 = content(req)
json2 = jsonlite::fromJSON(toJSON(json1))
new <- json2[44:45]
new
new[(new$releases_url,]
new[(new$releases_url]
new[(new$releases_url) ,]
new[(new$releases_url) ]
new[(new$releases_url)]
set.seed(13435) ## makes sample numbers below reproduceable
X <- data.frame("var1"=sample(1:5),"var2"=sample(6:10),"var3"=sample(11:15)) ##3 variables, 5 observations
X <- X[sample(1:5),]; X$var2[c(1,3)] = NA ## rescramble the dataframe, then replace 1st and 3rd characters of var2 with NAs
X
X[,"var1"] #
new
new[,5]
X[,1] ## subset the first row
set.seed(13435) ## makes sample numbers below reproduceable
X <- data.frame("var1"=sample(1:5),"var2"=sample(6:10),"var3"=sample(11:15)) ##3 variables, 5 observations
X <- X[sample(1:5),]; X$var2[c(1,3)] = NA ## rescramble the dataframe, then replace 1st and 3rd characters of var2 with NAs
X
class(new)
colnames(new)
new[,5]
new[,"releases_url"]
new
new[1:2,"releases_url"]
new[5,"releases_url"]
colnames(new)
new[5,"releases_url" & "created_at"]
set.seed(13435) ## makes sample numbers below reproduceable
X <- data.frame("var1"=sample(1:5),"var2"=sample(6:10),"var3"=sample(11:15)) ##3 variables, 5 observations
X <- X[sample(1:5),]; X$var2[c(1,3)] = NA ## rescramble the dataframe, then replace 1st and 3rd characters of var2 with NAs
X
X[1,]
new[5,]
new[5,]
