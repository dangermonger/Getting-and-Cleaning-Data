swirl()
library()
install.packages("swirl")
library()
library(swirl)
swirl()
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length()
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
q()
swirl()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lappy(flag_colors, sum)
lappy
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colours, mean)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lappy(flag_shapes, range)
lapply(flag_shapes, range)
shape_mat <- lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(unique(shape_mat)
)
unique_vals <- lapply(unique(shape_mat))
unique_vals <- lapply(flags, unique)
unique_vals
length(unique_vals)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
q()
set.seed(13435) ## makes sample numbers below reproduceable
X <- data.frame("var1"=sample(1:5),"var2"=sample(6:10),"var3"=sample(11:15)) ##3 variables, 5 observations
X <- X[sample(1:5),]; X$var2[c(1,3)] = NA ## rescramble the dataframe, then replace 1st and 3rd characters of var2 with NAs
X
library(plyr)
arrange(X,var1)
arrange(X,desc(var1))
X$var4 <- rnorm(5)
X
class(X)
Y <- cbind(X,rnorm(5))
Y
?table
?table
?table
help
help(plot)
updateR()
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
updateR()
r.Version()
R.versrion()
R.verstion
R.version
?table
setwd("C:/Users/Dangermonger/Documents/GitHub/Getting-and-Cleaning-Data/UCI HAR Dataset/train")
mydata = read.table("X_train.txt"
)
voluncol = read.table("subject_train.txt")
typeact = read.table("y_train.txt")
mydata
dim(voluncol)
dim(typeact)
head(typeact)
mergedcols = merge(voluncol, typeact)
dim(mergedcols)
typeact
dim(typeact)
x <-  seq(along = typeact)
dim(x)
x <- c(1,3,8,25,100); seq(along = x)
x <-  typeact; seq(along = typeact)
dim(x)
head(x)
tail(x)
x <-  typeact; seq(along = typeact)
tail(x)
typeactid = mutate(typeact,id=1:7352)
library(Hmisc); library(plyr)
typeactid = mutate(typeact,id=1:7352)
library(plyr)
typeactid = mutate(typeact,id=1:7352)
dim(typeactid)
head(typeactid)
typeact
typeact = read.table("y_train.txt")
typeact
library(plyr)
typeactid = mutate(typeact,id=1:7352)
dim(typeactid)
head(typeactid)
xtrain = read.table("X_train.txt")
head(typeactid)
typeactid = mutate(id=1:7352, typeact)
head(typeactid)
?arrange
arrange(typeactid, id, V1)
head(typeactid)
typeactid = arrange(typeactid, id, V1)
head(typeactid)
typeactid2 = arrange(typeactid, id, V1)
head(typeactid2)
typeactid2 = arrange(typeactid, id)
head(typeactid2)
dim(typeactid)
typeactid2 = arrange(typeactid, id, V1)
head(typeactid2)
class(typeactid2)
typeactid = mutate(typeact,id=1:7352) arrange(typeactid, id, V1)
typeactid = mutate(typeact,id=1:7352); arrange(typeactid, id, V1)
?names
?colnames
colnames(typeactid)
head(typeactid2)
typeactid = mutate(typeact,id=1:7352)
typeactid = mutate(typeact,id=1:7352)
library(swirl)
swirl()
library(tidyr)
students
?gather
skip()
skip()
skip()
skip()
skip()
skip()
# Repeat your calls to gather() and separate(), but this time
# use the %>% operator to chain the commands together without
skip()
# use the %>% operator to chain the commands together without
# storing an intermediate result.
#
# If this is your first time seeing the %>% operator, check
skip()
swirl()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
typeactid = mutate(typeact,id=1:7352)
select(typeactid, id, V1)
library(dplyr)
library(dplyr)
typeactid = mutate(typeact,id=1:7352)
select(typeactid, id, V1)
library(dplyr)
typeactid = mutate(typeact,id=1:7352)
typeactbl <- tbl_df(typeactid)
select(typeactbl, id, V1)
head(typeact)
dim(typeact)
dim(voluncol)
voluncol = read.table("subject_train.txt")
##dim(voluncol)
volunid = mutate(voluncol,id=1:7352)
typeact = read.table("y_train.txt") ##read y_train
##dim(typeact)
typeactid = mutate(typeact,id=1:7352) ##
xtrain = read.table("X_train.txt")
##dim(xtrain)
##class(xtrain)
xtrainid = mutate(xtrain,id=1:7352) #
?merge
merg-type-vol = merge(typeactid, volunid, xtrainid)
merg-type-vol = merge(typeactid, volunid)
mergtypevol = merge(typeactid, volunid)
dim(mergtypevol)
head(mergtypevol)
mergedData = merge(typeactid, volunid,by.x="id",by.y="id",all=TRUE)
mergtypevol = merge(typeactid, volunid,by.x="id",by.y="id",all=TRUE)
head(mergtypevol)
typeact
mergxtypevol = merge(mergtypevol, xtrainid, by.x = 'id', by.y="id", all=TRUE)
head(mergxtypevol)
summarize(mergxtypevol)
dim(xtrain)
str(mergxtypevol)
ls()
rm(list = ls())
ls()
q()
